<div class="container">
  <label class="mt-4 mb-4 lead lead-font-size bg-secondary text-light">投稿内容編集画面</label>
  <div class="row">
    <div class="col-md-6">
      <%= form_with model: @post, local: true, multipart: true do |f| %>
      <div class="form-group mb-5">
        <label>投稿名</label>
        <%= f.text_field :post_name %>(例)○○交差点の渋滞について
      </div>
      <div class="form-group mb-5">
        <label>道路名</label>
        <%= f.text_field :road_name %>(例)国道○○線○○交差点
      </div>
      <div class="form-group mt-5">
        <label>ご意見・ご要望</label>
        <%= f.text_area :introduction %>
      </div>
      <div class="form-group mt-5">
        <label>写真</label>
        <%= f.file_field :image %>
      </div>
      <%= fields_for :map do |m| %>
      <div class="form-group mt-5"></div>
        <label>住所</label>
        <%= m.text_field :address %><br>
        ※右の地図検索で投稿箇所付近の<br>
        建物・施設等の住所を検索し入力する。
      <% end %>
      <div><%= f.submit "変更を保存",class: "btn btn-success mt-5" %></div>
      <% end %>
    </div>
    <div class="col-md-4">
      <input id="address" type="textbox" value="">
      <input type="button" value="地図を検索" onclick="codeAddress()">
      <div id='map'></div>

      <style>
          #map {
              height: 400px;
              width: 400px;
          }
      </style>
      <script>
        let map

        const display = document.getElementById('display')
        function initMap() {
            geocoder = new google.maps.Geocoder()

            map = new google.maps.Map(document.getElementById('map'), {
                center: {
                    lat: 35.6458437,
                    lng: 139.7046171
                },
                zoom: 12,
            });
              // クリックしたときに関数を実行
              mapInstance.addListener('click', function(e) {
                getClickLatLng(e.latLng, mapInstance);
                });
              }


            // 住所、座標を取得してマーカー設置
            function getClickLatLng(latlng, mapInstance) {
              document.getElementById('road_latitude').value = latlng.lat();
              document.getElementById('road_longitude').value = latlng.lng();

              // 既存のマーカーの削除
              deleteMarker();

              // マーカー設置
              marker = new google.maps.Marker({
                position: latlng,
                map: mapInstance
              });

              mapInstance.panTo(latlng);
            }

            // 既にあるマーカーの削除
            function deleteMarker() {
              if(marker != null){
                marker.setMap(null);
              }
              marker = null;
            }

        let geocoder

        function codeAddress() {
            let inputAddress = document.getElementById('address').value;

            geocoder.geocode({
                'address': inputAddress
            }, function (results, status) {
                if (status == 'OK') {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });

                display.textContent = "検索結果：" + results[ 0 ].geometry.location
                } else {
                    alert('該当する結果がありませんでした：' + status);
                }
            });
        }
      </script>

      <script
        src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_KEY'] %>&callback=initMap"
        async defer>
      </script>

    </div>
  </div>

</div>